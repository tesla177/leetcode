class Solution {
    public int nthMagicalNumber(int n, int a, int b) {
        int mod = (int)1e9+7;
        long l = Math.min(a,b);
        long r = (long)Math.min(a,b) * n;
        int c = lcm(a,b);
        while(l<=r){
            long mid = (l+r)/2;
            long cnt = (mid/a + mid/b - mid/c);
            if(cnt >= n){
                r = mid-1;
            }else{
                l = mid+1;
            }
        }
        return (int) ((r+1)%mod);
    }
    public int lcm(int a,int b){
        return a*b/gcd(a,b);
    }
    public int gcd(int a,int b){
        return b!=0?gcd(b,a%b):a;
    }
}
